import { createSSRApp } from 'vue'
import { renderToString } from 'vue/server-renderer'
import App from './App.vue'
import createRouter from './router'

export const render: ServerRender = async function (url, ctx) {
  const app = createSSRApp(App)
  const router = createRouter({
    setTitle: ctx.setTitle,
  })
  app.use(router)
  // set the router to the desired URL before rendering
  await router.push(url)
  await router.isReady()
  // passing SSR context object which will be available via useSSRContext()
  // @vitejs/plugin-vue injects code into a component's setup() that registers
  // itself on ctx.modules. After the render, ctx.modules would contain all the
  // components that have been instantiated during this render call.
  const html = await renderToString(app, ctx)

  // the SSR manifest generated by Vite contains module -> chunk/asset mapping
  // which we can then use to determine what files need to be preloaded for this
  // request.
  return html
}

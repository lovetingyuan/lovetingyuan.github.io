import{o,c,p as d}from"./index-385f181a.js";const p={class:"markdown-body"},r=d("<h3>文本换行</h3><p>CJK 文字可以理解东亚国家文字，像中文，日文，韩文等，这些文本的换行跟拉丁字符等文本的换行表现是有所区别的</p><p>当 CJK 文本不含有标点时，每个文字处都有可能换行，但是当有标点时，情况又有所不同：</p><p>标点可以分为两类，避头标点（不能出现在文本开头），避尾标点（不能出现在文本结尾），像避头标点，无法单独在某一行，前面至少要接一个字符，当然这些都是浏览器尽可能采取的阅读优化措施，不一定所有的标点都不能换行。</p><p>非 CJK 字符中，最常见的就是空格会引起换行，另外像短横线等字符也有可能会引起换行</p><p>如果一段长文本没有中断字符，那么默认就有可能超出容器的范围，可以使用<code>word-break: break-all</code>来解决，但是这样有可能会在某个单词中间强行换行（破折号除外）（这个问题可以设置<code>hyphens: auto</code>来改善，会在被强行换行的单词换行出添加一个短横线，其实实际开发一般不会使用这个优化，因为一是这个属性生效有限制，需要网页语言设置为英语等，另外最大的问题是用户没办法区分这个短横线是用来标识连接的还是它本身就是单词里的一部分）</p><p>另外还有一个相似的属性<code>word-wrap: break-word</code>，它能使破折号也换行</p><p>另外还有一个相似的属性<code>overflow-wrap: break-word</code>，它是用来替代<code>word-wrap</code>的</p><p><code>hyphens: manual</code> unicode 字符中有个专门用来表示换行的字符 <code>&amp;shy;</code>，在文本中添加它浏览器会在需要换行的时候将其显示为短横线</p><p>html 里有个标签是专门用来实现文本换行的，<code>&lt;wbr&gt;</code>，当文本需要换行的时候，会优先在这个标签出现的位置换行</p><p>下面介绍一下 css 中的换行属性：</p><ul><li><code>word-break: keep-all</code> 可以避免中文字符的换行</li><li><code>line-break: anywhere</code> 可以实现标点符号处的换行</li><li><code>white-space: nowrap</code> 可以实现避免空格处换行（中文即使没有空格也不会换行）</li><li><code>overflow-wrap: anywhere</code> 可以实现每一处都可以成为换行的位置</li></ul>",12),a=[r],w={__name:"文本换行",setup(t,{expose:e}){return e({frontmatter:{}}),(s,n)=>(o(),c("div",p,a))}};export{w as default};

import{o,c as l,s as c}from"./index-54a521d0.js";const d={class:"markdown-body"},s=c(`<h2>css 选择器和优先级</h2><h3>一些选择器：</h3><ul><li>直接子代选择器 <code>ul &gt; li</code>, ul 下面<strong>一层</strong>的 li</li><li>一般兄弟选择器 <code>ul ~ p</code>, ul 后面同层级的所有 p</li><li>紧邻兄弟选择器 <code>h2 + p</code>, h2 后面紧跟着的 p</li><li>属性选择器 <code>[data-id]</code><ul><li><code>[attr~=value]</code> 属性值以空格符分开后至少有一个是 value</li><li><code>[attr|=value]</code> 属性值以<code>value</code>或者<code>value-</code>为前缀</li><li><code>[attr^=value]</code> 属性值以<code>value</code>为开头</li><li><code>[attr$=value]</code> 属性值以<code>value</code>为结尾</li><li><code>[attr*=value]</code> 属性值包含 value 即可</li><li><code>[attr operator value i]</code>, <code>[attr operator value s]</code> 加上<code>value i</code>(或 s)表示属性值<strong>不区分</strong>大小写和<strong>区分</strong>大小写</li></ul></li></ul><h3>优先级</h3><ul><li>内联样式</li><li>ID 选择器</li><li>类，属性，伪类选择器</li><li>标签，伪元素选择器 以上选择器优先级从高到低</li><li>通用选择器(*)</li><li>层次选择器( ,&gt;,~,+)</li><li><code>:not()</code>伪类选择器 以上选择器对优先级没有影响</li></ul><p>优先级的计算与元素在 dom 树中的距离无关：</p><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code><span class="line"><span style="color:#D7BA7D;">body</span><span style="color:#D4D4D4;"> </span><span style="color:#D7BA7D;">h1</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">color</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">green</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"><span style="color:#D7BA7D;">html</span><span style="color:#D4D4D4;"> </span><span style="color:#D7BA7D;">h1</span><span style="color:#D4D4D4;"> {</span></span>
<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">color</span><span style="color:#D4D4D4;">: </span><span style="color:#CE9178;">purple</span><span style="color:#D4D4D4;">;</span></span>
<span class="line"><span style="color:#D4D4D4;">}</span></span>
<span class="line"></span></code></pre><p>h1 是紫色，优先级相同就按照顺序覆盖</p><hr><p>下面列举一些常用的伪类和伪元素:</p><h3>伪元素(<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-elements" target="_blank" rel="noopener">mdn</a>)</h3><p>伪元素表示可以渲染到界面但无法在 html 中描述的“元素”，通常作为现有元素的特定部分</p><ul><li><code>::after</code>, <code>::before</code>, <code>::first-line</code>, <code>::first-letter</code>, <code>::selection</code>, <code>::placeholder</code></li></ul><h3>伪类(<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/Pseudo-classes" target="_blank" rel="noopener">mdn</a>)</h3><p>伪类描述一些具有特定结构、状态或者行为的元素</p><ul><li><code>:root</code> 代表 html 元素，但比 html 标签选择器的优先级高一些</li><li>表单相关 <ul><li><code>:checked</code> 通常用于单选复选框，下拉框等，可以不借助 js 实现 tab 效果</li><li><code>:disabled</code>, <code>:enabled</code>; <code>:required</code>, <code>:optional</code>; <code>:read-only</code>, <code>:read-write</code>; <code>:in-range</code>, <code>:out-of-range</code>; <code>:valid</code>, <code>:invalid</code>; <code>:default</code>…</li></ul></li><li>结构性伪类 <ul><li><code>:first-child</code>, <code>:last-child</code>; <code>:first-of-type</code>,<code>:last-of-type</code>; <code>:nth-child()</code>, <code>:nth-last-child()</code>; <code>:nth-of-type()</code>, <code>:nth-last-of-type()</code></li><li><code>:only-child</code>, <code>:only-of-type</code> 代表元素的唯一子元素，与<code>:first-child:last-child</code>含义上相同</li><li><code>:empty</code> 表示不包含子元素的元素（注释不算子元素但空白字符算），可以用它来展示加载前的样式</li></ul></li><li>状态相关 <ul><li><code>:focus</code>, <code>:active</code>, <code>:visited</code></li><li><code>:link</code> 表示未访问过的链接，遵循下面的顺序:link — :visited — :hover — :active，<code>:any-link</code>表示所有带链接的元素</li><li><code>:focus-within</code>，匹配包含焦点元素的元素</li></ul></li><li><code>:is()</code>，参数为一组选择器，然后会遍历这些选择器让其每一个都生效，与此类似的是<code>:where()</code>.<a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:is" target="_blank" rel="noopener">mdn</a></li><li><code>:target</code> 匹配和当前路由哈希（#）对的上的那个元素</li><li><code>:not()</code> <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:not" target="_blank" rel="noopener">mdn</a>，反向匹配，匹配不是某选择器的元素</li><li><code>:scope</code> <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:scope" target="_blank" rel="noopener">mdn</a> 表示当前元素，在 css 里相当于<code>:root</code>，在 js 里指代当前元素，如<code>someElement.querySelectorAll(&#39;:scope &gt; div&#39;);</code></li><li><code>:has()</code> <a href="https://developer.mozilla.org/zh-CN/docs/Web/CSS/:has" target="_blank" rel="noopener">mdn</a> 表示匹配当前元素并且满足给定的选择器，如<code>a:has(&gt; img)</code>表示只会匹配直接包含 &lt;img&gt; 子元素的 &lt;a&gt; 元素</li></ul>`,16),a=[s],h={__name:"CSS选择器",setup(t,{expose:e}){return e({frontmatter:{}}),(i,r)=>(o(),l("div",d,a))}};export{h as default};

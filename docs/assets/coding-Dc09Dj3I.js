import{o as a,f as n,N as l}from"./vendor-KON_WPKK.js";const p={class:"markdown-body"},i=l(`<h2>coding</h2><ol><li>并发请求限制</li></ol><details><summary>result</summary><div style="padding-top:10px;"><pre class="shiki shiki-themes github-light github-dark" style="background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8;" tabindex="0"><code class="language-js"><span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">function</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> concurrentRequests</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="color:#E36209;--shiki-dark:#FFAB70;">urls</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#E36209;--shiki-dark:#FFAB70;">limit</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  return</span><span style="color:#D73A49;--shiki-dark:#F97583;"> new</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> Promise</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="color:#E36209;--shiki-dark:#FFAB70;">resolve</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#E36209;--shiki-dark:#FFAB70;">reject</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">    const</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> results</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#D73A49;--shiki-dark:#F97583;"> new</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Array</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(urls.</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">    let</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> completedCount </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">    let</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> index </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">    function</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> processNext</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">      if</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (index </span><span style="color:#D73A49;--shiki-dark:#F97583;">&gt;=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> urls.</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">return</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">      const</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> currentIndex</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> index</span><span style="color:#D73A49;--shiki-dark:#F97583;">++</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">      window</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">fetch</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(urls[currentIndex])</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="color:#E36209;--shiki-dark:#FFAB70;">response</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> response.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">json</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="color:#E36209;--shiki-dark:#FFAB70;">data</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">          results[currentIndex] </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> data</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">        })</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">catch</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="color:#E36209;--shiki-dark:#FFAB70;">error</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">          results[currentIndex] </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> { error: error.message }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">        })</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">        .</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">finally</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">          completedCount</span><span style="color:#D73A49;--shiki-dark:#F97583;">++</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">          if</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (completedCount </span><span style="color:#D73A49;--shiki-dark:#F97583;">===</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> urls.</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#B392F0;">            resolve</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(results)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">          } </span><span style="color:#D73A49;--shiki-dark:#F97583;">else</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#B392F0;">            processNext</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">          }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">        })</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">    // 启动初始的请求</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">    for</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="color:#D73A49;--shiki-dark:#F97583;">let</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> i </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">; i </span><span style="color:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">min</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(limit, urls.</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">); i</span><span style="color:#D73A49;--shiki-dark:#F97583;">++</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#B392F0;">      processNext</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre></div></details>`,3),r=[i],c={__name:"coding",setup(o,{expose:s}){return s({frontmatter:{}}),(e,E)=>(a(),n("div",p,r))}};export{c as default};

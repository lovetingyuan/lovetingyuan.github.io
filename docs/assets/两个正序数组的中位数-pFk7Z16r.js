import{o as a,c as n,J as l}from"./vendor-qbV36AJH.js";const p={class:"markdown-body"},i=l(`<p>寻找两个正序数组的中位数 <a href="https://leetcode-cn.com/problems/median-of-two-sorted-arrays/" target="_blank" rel="noopener">leetcode</a></p><p><img src="https://pic.leetcode-cn.com/735ea8129ab5b56b7058c6286217fa4bb5f8a198e4c8b2172fe0f75b29a966cd-image.png" alt="-"></p><p>找到两个数组的前 3 个，根据尾数大小判断需要舍弃下面的 1，2，3，因为它们一定是前 k 小的数字中的一部分 这样 i 还是 0，j 变成 3 <img src="https://pic.leetcode-cn.com/09b8649cd2b8bbea74f7f632b098fed5f8404530ff44b5a0b54a360b3cf7dd8f-image.png" alt="-"></p><p><img src="https://pic.leetcode-cn.com/3c89a8ea29f2e19057b57242c8bc37c5f09b6796b96c30f3d42caea21c12f294-image.png" alt="-"></p><pre class="shiki shiki-themes github-light github-dark" style="background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8;" tabindex="0"><code class="language-js"><span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">var</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> findMedianSortedArrays</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#D73A49;--shiki-dark:#F97583;"> function</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="color:#E36209;--shiki-dark:#FFAB70;">nums1</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#E36209;--shiki-dark:#FFAB70;">nums2</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  let</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> k </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">ceil</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">((nums1.</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="color:#D73A49;--shiki-dark:#F97583;"> +</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> nums2.</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">/</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">  // 下面的任务就是找到前k小的数，策略就是找两个数组前k/2小的数，然后通过比较尾数决定排除哪个k/2</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">  // 然后慢慢缩小k</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  const</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> isOdd</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (nums1.</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="color:#D73A49;--shiki-dark:#F97583;"> +</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> nums2.</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">%</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  let</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> [i, j] </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  while</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">true</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">    if</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (k </span><span style="color:#D73A49;--shiki-dark:#F97583;">===</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">      if</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (i </span><span style="color:#D73A49;--shiki-dark:#F97583;">===</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> nums1.</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">        return</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> isOdd </span><span style="color:#D73A49;--shiki-dark:#F97583;">?</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> nums2[j] </span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (nums2[j] </span><span style="color:#D73A49;--shiki-dark:#F97583;">+</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> nums2[j </span><span style="color:#D73A49;--shiki-dark:#F97583;">+</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="color:#D73A49;--shiki-dark:#F97583;">/</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">      if</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (j </span><span style="color:#D73A49;--shiki-dark:#F97583;">===</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> nums2.</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">        return</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> isOdd </span><span style="color:#D73A49;--shiki-dark:#F97583;">?</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> nums1[i] </span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (nums1[i] </span><span style="color:#D73A49;--shiki-dark:#F97583;">+</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> nums1[i </span><span style="color:#D73A49;--shiki-dark:#F97583;">+</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">]) </span><span style="color:#D73A49;--shiki-dark:#F97583;">/</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">      if</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (isOdd) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">        return</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">min</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(nums1[i], nums2[j])</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">      if</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (nums1[i] </span><span style="color:#D73A49;--shiki-dark:#F97583;">&lt;=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> nums2[j]) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">        if</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (i </span><span style="color:#D73A49;--shiki-dark:#F97583;">+</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="color:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> nums1.</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">          // 偶数长度的话要交叉对比取最小的两个值的平均值</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">          return</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (nums1[i] </span><span style="color:#D73A49;--shiki-dark:#F97583;">+</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">min</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(nums1[i </span><span style="color:#D73A49;--shiki-dark:#F97583;">+</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">], nums2[j])) </span><span style="color:#D73A49;--shiki-dark:#F97583;">/</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">        return</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (nums1[i] </span><span style="color:#D73A49;--shiki-dark:#F97583;">+</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> nums2[j]) </span><span style="color:#D73A49;--shiki-dark:#F97583;">/</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">      } </span><span style="color:#D73A49;--shiki-dark:#F97583;">else</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">        if</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (j </span><span style="color:#D73A49;--shiki-dark:#F97583;">+</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="color:#D73A49;--shiki-dark:#F97583;"> &lt;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> nums2.</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">          return</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (nums2[j] </span><span style="color:#D73A49;--shiki-dark:#F97583;">+</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">min</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(nums2[j </span><span style="color:#D73A49;--shiki-dark:#F97583;">+</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">], nums1[i])) </span><span style="color:#D73A49;--shiki-dark:#F97583;">/</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">        }</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">        return</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (nums2[j] </span><span style="color:#D73A49;--shiki-dark:#F97583;">+</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> nums1[i]) </span><span style="color:#D73A49;--shiki-dark:#F97583;">/</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">    const</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> half</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">floor</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(k </span><span style="color:#D73A49;--shiki-dark:#F97583;">/</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">    const</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">lastI</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#005CC5;--shiki-dark:#79B8FF;">lastJ</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> [i </span><span style="color:#D73A49;--shiki-dark:#F97583;">+</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> half </span><span style="color:#D73A49;--shiki-dark:#F97583;">-</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, j </span><span style="color:#D73A49;--shiki-dark:#F97583;">+</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> half </span><span style="color:#D73A49;--shiki-dark:#F97583;">-</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">    if</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (lastI </span><span style="color:#D73A49;--shiki-dark:#F97583;">&gt;=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> nums1.</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">      j </span><span style="color:#D73A49;--shiki-dark:#F97583;">+=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> half</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="color:#D73A49;--shiki-dark:#F97583;">else</span><span style="color:#D73A49;--shiki-dark:#F97583;"> if</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (lastJ </span><span style="color:#D73A49;--shiki-dark:#F97583;">&gt;=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> nums2.</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">      i </span><span style="color:#D73A49;--shiki-dark:#F97583;">+=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> half</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="color:#D73A49;--shiki-dark:#F97583;">else</span><span style="color:#D73A49;--shiki-dark:#F97583;"> if</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (nums1[lastI] </span><span style="color:#D73A49;--shiki-dark:#F97583;">&lt;=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> nums2[lastJ]) {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">      i </span><span style="color:#D73A49;--shiki-dark:#F97583;">+=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> half</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">    } </span><span style="color:#D73A49;--shiki-dark:#F97583;">else</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">      j </span><span style="color:#D73A49;--shiki-dark:#F97583;">+=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> half</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">    k </span><span style="color:#D73A49;--shiki-dark:#F97583;">-=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> half</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre>`,5),r=[i],t={__name:"两个正序数组的中位数",setup(o,{expose:s}){return s({frontmatter:{}}),(E,e)=>(a(),n("div",p,r))}};export{t as default};

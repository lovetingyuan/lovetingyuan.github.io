import{o,c,a as d}from"./index-c005fc22.js";const l={class:"markdown-body"},t=d("<h3>flex 布局</h3><h4>容器属性</h4><ul><li><code>flex-direction</code> 表示主轴方向 <code>row(主轴水平，默认) | row-reverse | column(主轴垂直) | column-reverse;</code></li><li><code>flex-wrap</code> 表示子元素是否换行，使用<code>wrap</code>或<code>wrap-reverse</code>属性会使得当前的容器拥有多条主轴 <code>nowrap | wrap | wrap-reverse;</code></li><li><code>flex-flow</code> 是上述两个属性的缩写，默认为<code>row nowrap</code></li><li><code>justify-content</code> 表示子项目的对齐方式 <code>flex-start | flex-end | center | space-between | space-around;</code></li><li><code>align-items</code> 定义子项目在交叉轴上的对齐方式 <code>flex-start | flex-end | center | baseline(以子项目文本的baseline对齐) | stretch;</code></li><li><code>align-content</code> 定义多根主轴的对齐方式。如果项目只有一根轴线，该属性不起作用 <code>flex-start | flex-end | center | space-between | space-around | stretch;</code></li></ul><h4>子元素属性</h4><ul><li><p><code>order</code> 可以定义项目的位置（顺序） , 取整数，默认为 0，越小项目就排前面</p></li><li><p><code>flex-grow</code> 项目的放大比例，默认为 0，如果是 1 那么将占据剩余空间</p></li><li><p><code>flex-shrink</code> 定义了项目的缩小比例，默认为 1，即如果空间不足，该项目将缩小</p></li><li><p><code>flex-basis</code></p><blockquote><p>flex-basis 优先级是比 width 高，二者最好不要一起使用 flex-basis 默认为 auto ，表示子项的基本尺寸根据其自身的尺寸决定 如果 flex-basis 的值是具体尺寸，那么子项的尺寸会取自身内容尺寸和 basis 尺寸较大的那个值</p></blockquote><p>此外还可以取尺寸关键词，如 <code>content</code>, <code>min-content</code>, <code>max-content</code>, <code>fill</code>, <code>fit-content</code></p></li><li><p><code>flex</code> 是 <code>flex-grow, flex-shrink, flex-basis</code> 的缩写，默认是 <code>0 1 auto</code> <br> 如果值是整数，那么代表 flex-grow 的数值，shrink 还是 1，basis 则是 0%<br> 如果是 auto，那么等同于<code>1 1 auto</code>, 如果是 none，则是<code>0 0 auto</code></p></li><li><p><code>align-self</code> 可以单独设置在交叉轴上的对齐方式，会覆盖<code>align-items</code>属性<br><code>auto | flex-start | flex-end | center | baseline | stretch;</code></p></li></ul>",5),r=[t],p={__name:"flex",setup(i,{expose:e}){return e({frontmatter:{}}),(s,a)=>(o(),c("div",l,r))}};export{p as default};

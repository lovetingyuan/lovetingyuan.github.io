import{c as p,o as e,a as r}from"./index-5fed1282.js";const s="/images/http2-stream-frame.png",a="/images/http2-header-compress.png",o={class:"markdown-body"},i=r('<h2>http2</h2><p>http2 是 http1.1 之后的重大版本更新</p><ul><li><p>二进制分帧</p><p>http2 的请求和响应都是由一个或多个帧组成的 <br> 帧有不同的类型，有 header 帧，data 帧以及其余 8 种控制帧 <br> 每个帧都有一个 id，来标识自己属于哪个流 <br></p></li><li><p>多路复用</p><p>不同的请求和响应可以在同一个 tcp 连接上按照随意的顺序发送和接收 <br> 一个请求和其响应的帧组成一条数据流，一个 tcp 连接上可以有多条数据流乱序并行发送 <br> 流是个逻辑概念，每个流有 id 标识，每个帧也都保存了所属的流 id，也就是拥有同样流 id 的帧组成了一条数据流 <br> 虽然流可以乱序发送，但是流内的帧必须是有序的</p><p><img src="'+s+'" alt=""></p></li><li><p>服务端推送</p><p>http2 默认不开启这个特性，需要在服务端配置，一般只对新用户首次访问时启用</p></li><li><p>首部压缩</p><p>双方会维护一个首部表，用数字索引来代替常用的 header，另外用哈夫曼编码来压缩字符串</p><p>首部表由规范定义好的静态表和需要运行时双方共同维护的动态表组成</p><p><img src="'+a+'" alt=""></p></li></ul>',3),c=[i],d={__name:"http2",setup(n,{expose:t}){return t({frontmatter:{}}),(h,l)=>(e(),p("div",o,c))}};export{d as default};

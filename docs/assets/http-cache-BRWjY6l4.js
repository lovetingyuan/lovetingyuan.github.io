import{o as e,f as c,N as l}from"./vendor-KON_WPKK.js";const t={class:"markdown-body"},a=l('<h2>http 缓存</h2><h3>强缓存</h3><p><a href="https://developer.mozilla.org/zh-CN/docs/Web/HTTP/Headers/Cache-Control" target="_blank" rel="noopener"><code>cache-control</code></a></p><p>在请求中：</p><ul><li>Cache-Control: <code>max-age=&lt;seconds&gt;</code></li><li>Cache-Control: <code>max-stale[=&lt;seconds&gt;]</code></li><li>Cache-Control: <code>min-fresh=&lt;seconds&gt;</code></li><li>Cache-control: <code>no-cache</code></li><li>Cache-control: <code>no-store</code></li><li>Cache-control: <code>no-transform</code></li><li>Cache-control: <code>only-if-cached</code></li></ul><p>在响应中:</p><ul><li>Cache-control: must-revalidate 本地副本过期前，可以使用本地副本；本地副本一旦过期，必须去源服务器进行有效性校验。</li><li>Cache-control: no-cache 不管本地副本是否过期，使用资源副本前，一定要到源服务器进行副本有效性校验。相当于<code>max-age=0, must-revalidate</code></li><li>Cache-control: <code>no-store</code></li><li>Cache-control: <code>no-transform</code></li><li>Cache-control: <code>public</code></li><li>Cache-control: <code>private</code></li><li>Cache-control: <code>proxy-revalidate</code></li><li>Cache-Control: <code>max-age=&lt;seconds&gt;</code></li><li>Cache-control: <code>s-maxage=&lt;seconds&gt;</code></li></ul><p>非标准属性：</p><ul><li>Cache-control: <code>immutable</code></li><li>Cache-control: <code>stale-while-revalidate=&lt;seconds&gt;</code></li><li>Cache-control: <code>stale-if-error=&lt;seconds&gt;</code></li></ul><h3>协商缓存</h3><ul><li><p>Last-Modified/If-Modified-Since</p><p>响应中携带 Last-Modified，表示资源最后修改的时间，请求时将这个时间再通过 If-Modified-Since 发送出去</p></li><li><p>ETag/If-None-Match (优先级高于Last-Modified)</p><p>响应中携带 ETag，表示资源最后修改的时间，请求时将这个时间再通过 If-None-Match 发送出去</p></li></ul><p>如果服务器判断资源没有修改，那么会返回 304 的状态响应码</p>',12),i=[a],p={__name:"http-cache",setup(d,{expose:o}){return o({frontmatter:{}}),(r,s)=>(e(),c("div",t,i))}};export{p as default};

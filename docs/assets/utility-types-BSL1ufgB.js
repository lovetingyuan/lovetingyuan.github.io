import{o as a,c as n,L as l}from"./vendor-W8kV4cSF.js";const p={class:"markdown-body"},i=l(`<h3>TypeScript 高阶类型</h3><p>TypeScript 的一个强大之处在于它支持通过泛型以及一些关键字和操作符对类型本身进行编程。</p><p>TypeScript 语言本身就内置的一些高阶类型，利用它们可以方便的实现类型编程：</p><p>借助于下面要介绍的工具类型，可以实现一些其他常用的工具类型，例如</p><ul><li><a href="https://github.com/sindresorhus/type-fest" target="_blank" rel="noopener"><code>type-fest</code></a></li><li><a href="https://github.com/piotrwitek/utility-types" target="_blank" rel="noopener"><code>utility-types</code></a></li><li><a href="https://github.com/millsp/ts-toolbelt" target="_blank" rel="noopener"><code>ts-toolbelt</code></a></li><li><a href="https://github.com/andnp/SimplyTyped" target="_blank" rel="noopener"><code>SimplyTyped</code></a></li></ul><p>另外 github 上有个类型体操的题目挑战列表<a href="https://github.com/type-challenges/type-challenges" target="_blank" rel="noopener"><code>type-challenges</code></a>，里面有不同难度的题目可以解答</p><h4>一些内置工具类型的实现</h4><pre class="shiki shiki-themes github-light github-dark" style="background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8;" tabindex="0"><code class="language-typescript"><span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 类型T的所有属性都变为可选的</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Partial</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  [</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">P</span><span style="color:#D73A49;--shiki-dark:#F97583;"> in</span><span style="color:#D73A49;--shiki-dark:#F97583;"> keyof</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="color:#D73A49;--shiki-dark:#F97583;">?:</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">P</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// T的所有属性都变成必选的</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Required</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  [</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">P</span><span style="color:#D73A49;--shiki-dark:#F97583;"> in</span><span style="color:#D73A49;--shiki-dark:#F97583;"> keyof</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="color:#D73A49;--shiki-dark:#F97583;">-?:</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">P</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// T所有的属性都变成只读的</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Readonly</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  readonly</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> [</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">P</span><span style="color:#D73A49;--shiki-dark:#F97583;"> in</span><span style="color:#D73A49;--shiki-dark:#F97583;"> keyof</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">P</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><pre class="shiki shiki-themes github-light github-dark" style="background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8;" tabindex="0"><code class="language-typescript"><span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 从T中选择若干特定名称的属性组成新类型</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Pick</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#6F42C1;--shiki-dark:#B392F0;">K</span><span style="color:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="color:#D73A49;--shiki-dark:#F97583;"> keyof</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  [</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">P</span><span style="color:#D73A49;--shiki-dark:#F97583;"> in</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> K</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">P</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 例子：从类型中只选取函数类型的属性组成新类型</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> PickFunc</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Pick</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#B392F0;">  T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">    [</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">k</span><span style="color:#D73A49;--shiki-dark:#F97583;"> in</span><span style="color:#D73A49;--shiki-dark:#F97583;"> keyof</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">[</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">k</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">] </span><span style="color:#D73A49;--shiki-dark:#F97583;">extends</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="color:#D73A49;--shiki-dark:#F97583;">...</span><span style="color:#E36209;--shiki-dark:#FFAB70;">args</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="color:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> k</span><span style="color:#D73A49;--shiki-dark:#F97583;"> :</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> never</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  }[</span><span style="color:#D73A49;--shiki-dark:#F97583;">keyof</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">]</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// K作为键，T作为类型值组成的新类型（keyof any的值是string | number | symbol）</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Record</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">K</span><span style="color:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="color:#D73A49;--shiki-dark:#F97583;"> keyof</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  [</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">P</span><span style="color:#D73A49;--shiki-dark:#F97583;"> in</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> K</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">]</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 例子</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> AnyObject</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Record</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#005CC5;--shiki-dark:#79B8FF;">any</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">const</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> x</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Record</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#032F62;--shiki-dark:#9ECBFF;">&#39;home&#39;</span><span style="color:#D73A49;--shiki-dark:#F97583;"> |</span><span style="color:#032F62;--shiki-dark:#9ECBFF;"> &#39;about&#39;</span><span style="color:#D73A49;--shiki-dark:#F97583;"> |</span><span style="color:#032F62;--shiki-dark:#9ECBFF;"> &#39;contact&#39;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, { </span><span style="color:#E36209;--shiki-dark:#FFAB70;">title</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> }&gt; </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  about: { title: </span><span style="color:#032F62;--shiki-dark:#9ECBFF;">&#39;about&#39;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  contact: { title: </span><span style="color:#032F62;--shiki-dark:#9ECBFF;">&#39;contact&#39;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> },</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  home: { title: </span><span style="color:#032F62;--shiki-dark:#9ECBFF;">&#39;home&#39;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 从类型T中去除属于类型U的类型所得到的剩余类型，T通常是联合类型</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Exclude</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#6F42C1;--shiki-dark:#B392F0;">U</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> U</span><span style="color:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> never</span><span style="color:#D73A49;--shiki-dark:#F97583;"> :</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 例子</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T0</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Exclude</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#032F62;--shiki-dark:#9ECBFF;">&#39;a&#39;</span><span style="color:#D73A49;--shiki-dark:#F97583;"> |</span><span style="color:#032F62;--shiki-dark:#9ECBFF;"> &#39;b&#39;</span><span style="color:#D73A49;--shiki-dark:#F97583;"> |</span><span style="color:#032F62;--shiki-dark:#9ECBFF;"> &#39;c&#39;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#032F62;--shiki-dark:#9ECBFF;">&#39;a&#39;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#6A737D;--shiki-dark:#6A737D;">// &quot;b&quot; | &quot;c&quot;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T1</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Exclude</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#032F62;--shiki-dark:#9ECBFF;">&#39;a&#39;</span><span style="color:#D73A49;--shiki-dark:#F97583;"> |</span><span style="color:#032F62;--shiki-dark:#9ECBFF;"> &#39;b&#39;</span><span style="color:#D73A49;--shiki-dark:#F97583;"> |</span><span style="color:#032F62;--shiki-dark:#9ECBFF;"> &#39;c&#39;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#032F62;--shiki-dark:#9ECBFF;">&#39;a&#39;</span><span style="color:#D73A49;--shiki-dark:#F97583;"> |</span><span style="color:#032F62;--shiki-dark:#9ECBFF;"> &#39;b&#39;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#6A737D;--shiki-dark:#6A737D;">// &quot;c&quot;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T2</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Exclude</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="color:#D73A49;--shiki-dark:#F97583;"> |</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="color:#D73A49;--shiki-dark:#F97583;"> |</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (() </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="color:#6F42C1;--shiki-dark:#B392F0;">Function</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#6A737D;--shiki-dark:#6A737D;">// string | number</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 和Exclude相反，Extract表示将类型T中不属于U的类型去除</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Extract</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#6F42C1;--shiki-dark:#B392F0;">U</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> U</span><span style="color:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#D73A49;--shiki-dark:#F97583;"> :</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> never</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 例子</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T0</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Extract</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#032F62;--shiki-dark:#9ECBFF;">&#39;a&#39;</span><span style="color:#D73A49;--shiki-dark:#F97583;"> |</span><span style="color:#032F62;--shiki-dark:#9ECBFF;"> &#39;b&#39;</span><span style="color:#D73A49;--shiki-dark:#F97583;"> |</span><span style="color:#032F62;--shiki-dark:#9ECBFF;"> &#39;c&#39;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#032F62;--shiki-dark:#9ECBFF;">&#39;a&#39;</span><span style="color:#D73A49;--shiki-dark:#F97583;"> |</span><span style="color:#032F62;--shiki-dark:#9ECBFF;"> &#39;f&#39;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#6A737D;--shiki-dark:#6A737D;">// &quot;a&quot;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T1</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Extract</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="color:#D73A49;--shiki-dark:#F97583;"> |</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="color:#D73A49;--shiki-dark:#F97583;"> |</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (() </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">), </span><span style="color:#6F42C1;--shiki-dark:#B392F0;">Function</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#6A737D;--shiki-dark:#6A737D;">// () =&gt; void</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 表示去除T中名称属于K的那些属性</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Omit</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#6F42C1;--shiki-dark:#B392F0;">K</span><span style="color:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="color:#D73A49;--shiki-dark:#F97583;"> keyof</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Pick</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#6F42C1;--shiki-dark:#B392F0;">Exclude</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#D73A49;--shiki-dark:#F97583;">keyof</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#6F42C1;--shiki-dark:#B392F0;">K</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt;&gt;</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 例子</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">const</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> todo</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Omit</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  {</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#FFAB70;">    title</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#FFAB70;">    description</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> string</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#FFAB70;">    completed</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> boolean</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  },</span></span>
<span class="line"><span style="color:#032F62;--shiki-dark:#9ECBFF;">  &#39;description&#39;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  title: </span><span style="color:#032F62;--shiki-dark:#9ECBFF;">&#39;Clean room&#39;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">,</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  completed: </span><span style="color:#005CC5;--shiki-dark:#79B8FF;">false</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 去除掉T中的null和undefined</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> NonNullable</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="color:#D73A49;--shiki-dark:#F97583;"> |</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> undefined</span><span style="color:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> never</span><span style="color:#D73A49;--shiki-dark:#F97583;"> :</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 例子</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T0</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> NonNullable</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="color:#D73A49;--shiki-dark:#F97583;"> |</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="color:#D73A49;--shiki-dark:#F97583;"> |</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> undefined</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#6A737D;--shiki-dark:#6A737D;">// string | number</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T1</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> NonNullable</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">string</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">[] </span><span style="color:#D73A49;--shiki-dark:#F97583;">|</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> null</span><span style="color:#D73A49;--shiki-dark:#F97583;"> |</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> undefined</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#6A737D;--shiki-dark:#6A737D;">// string[]</span></span></code></pre><pre class="shiki shiki-themes github-light github-dark" style="background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8;" tabindex="0"><code class="language-typescript"><span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 获取函数的参数类型，以元组的形式返回</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Parameters</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="color:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="color:#D73A49;--shiki-dark:#F97583;">...</span><span style="color:#E36209;--shiki-dark:#FFAB70;">args</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="color:#D73A49;--shiki-dark:#F97583;">...</span><span style="color:#E36209;--shiki-dark:#FFAB70;">args</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#D73A49;--shiki-dark:#F97583;"> infer</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> P</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="color:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> P</span><span style="color:#D73A49;--shiki-dark:#F97583;"> :</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> never</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 例子</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">declare</span><span style="color:#D73A49;--shiki-dark:#F97583;"> function</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> f1</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="color:#E36209;--shiki-dark:#FFAB70;">arg</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="color:#E36209;--shiki-dark:#FFAB70;">a</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="color:#E36209;--shiki-dark:#FFAB70;">b</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> })</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> void</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T0</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Parameters</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;() </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#6A737D;--shiki-dark:#6A737D;">// []</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T1</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Parameters</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;(</span><span style="color:#E36209;--shiki-dark:#FFAB70;">s</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#6A737D;--shiki-dark:#6A737D;">// [string]</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T2</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Parameters</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#D73A49;--shiki-dark:#F97583;">typeof</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> f1&gt; </span><span style="color:#6A737D;--shiki-dark:#6A737D;">// [{ a: number, b: string }]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 获取构造方法的参数类型列表</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> ConstructorParameters</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="color:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="color:#D73A49;--shiki-dark:#F97583;"> new</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="color:#D73A49;--shiki-dark:#F97583;">...</span><span style="color:#E36209;--shiki-dark:#FFAB70;">args</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="color:#D73A49;--shiki-dark:#F97583;"> new</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  ...</span><span style="color:#E36209;--shiki-dark:#FFAB70;">args</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#D73A49;--shiki-dark:#F97583;"> infer</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> P</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> any</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  ?</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> P</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  :</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> never</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 例子</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T0</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> ConstructorParameters</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">ErrorConstructor</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#6A737D;--shiki-dark:#6A737D;">// [(string | undefined)?]</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T1</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> ConstructorParameters</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">FunctionConstructor</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#6A737D;--shiki-dark:#6A737D;">// string[]</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T2</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> ConstructorParameters</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;{</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  new</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="color:#E36209;--shiki-dark:#FFAB70;">a</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#E36209;--shiki-dark:#FFAB70;">b</span><span style="color:#D73A49;--shiki-dark:#F97583;">?:</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">)</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> {}</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">}&gt; </span><span style="color:#6A737D;--shiki-dark:#6A737D;">// [string, (number | undefined)?]</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 获取函数的返回类型</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> ReturnType</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="color:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="color:#D73A49;--shiki-dark:#F97583;">...</span><span style="color:#E36209;--shiki-dark:#FFAB70;">args</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="color:#D73A49;--shiki-dark:#F97583;">...</span><span style="color:#E36209;--shiki-dark:#FFAB70;">args</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#D73A49;--shiki-dark:#F97583;"> infer</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> R</span><span style="color:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> R</span><span style="color:#D73A49;--shiki-dark:#F97583;"> :</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> any</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 例子</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">declare</span><span style="color:#D73A49;--shiki-dark:#F97583;"> function</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> f1</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">()</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="color:#E36209;--shiki-dark:#FFAB70;">a</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">; </span><span style="color:#E36209;--shiki-dark:#FFAB70;">b</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T0</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> ReturnType</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;() </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#6A737D;--shiki-dark:#6A737D;">// string</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T1</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> ReturnType</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;(</span><span style="color:#E36209;--shiki-dark:#FFAB70;">s</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> string</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> void</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#6A737D;--shiki-dark:#6A737D;">// void</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T2</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> ReturnType</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="color:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> U</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#6F42C1;--shiki-dark:#B392F0;">U</span><span style="color:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> number</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">[]&gt;() </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#6A737D;--shiki-dark:#6A737D;">// number[]</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T3</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> ReturnType</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#D73A49;--shiki-dark:#F97583;">typeof</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> f1&gt; </span><span style="color:#6A737D;--shiki-dark:#6A737D;">// { a: number, b: string }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 返回构造类型T的实例类型</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> InstanceType</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="color:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="color:#D73A49;--shiki-dark:#F97583;"> new</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="color:#D73A49;--shiki-dark:#F97583;">...</span><span style="color:#E36209;--shiki-dark:#FFAB70;">args</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="color:#D73A49;--shiki-dark:#F97583;"> new</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="color:#D73A49;--shiki-dark:#F97583;">...</span><span style="color:#E36209;--shiki-dark:#FFAB70;">args</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#D73A49;--shiki-dark:#F97583;"> infer</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> R</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  ?</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> R</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  :</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> any</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 例子</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">class</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> C</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#FFAB70;">  x</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#FFAB70;">  y</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T0</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> InstanceType</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#D73A49;--shiki-dark:#F97583;">typeof</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> C</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#6A737D;--shiki-dark:#6A737D;">// C</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T1</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> InstanceType</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">Function</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#6A737D;--shiki-dark:#6A737D;">// Error</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 获取函数的this类型，这个需要--strictFunctionTypes配置项开启才能用</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> ThisParameterType</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#D73A49;--shiki-dark:#F97583;"> infer</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> U</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#D73A49;--shiki-dark:#F97583;">...</span><span style="color:#E36209;--shiki-dark:#FFAB70;">args</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">[]) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> any</span><span style="color:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> U</span><span style="color:#D73A49;--shiki-dark:#F97583;"> :</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> unknown</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 例子</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">function</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> toHex</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Number</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  return</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">function</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> numberToString</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="color:#E36209;--shiki-dark:#FFAB70;">n</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> ThisParameterType</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#D73A49;--shiki-dark:#F97583;">typeof</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> toHex&gt;) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  return</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> toHex.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">apply</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(n)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 去除函数的this类型</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> OmitThisParameter</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#79B8FF;">  unknown</span><span style="color:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> ThisParameterType</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">    ?</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">    :</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#D73A49;--shiki-dark:#F97583;"> extends</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="color:#D73A49;--shiki-dark:#F97583;">...</span><span style="color:#E36209;--shiki-dark:#FFAB70;">args</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#D73A49;--shiki-dark:#F97583;"> infer</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> A</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#D73A49;--shiki-dark:#F97583;"> infer</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> R</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">      ?</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="color:#D73A49;--shiki-dark:#F97583;">...</span><span style="color:#E36209;--shiki-dark:#FFAB70;">args</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> A</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> R</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">      :</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 例子</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">function</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> toHex</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Number</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  return</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">toString</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">16</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">const</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> fiveToHex</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> OmitThisParameter</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#D73A49;--shiki-dark:#F97583;">typeof</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> toHex&gt; </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> toHex.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">bind</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">5</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre>`,10),r=[i],E={__name:"utility-types",setup(o,{expose:s}){return s({frontmatter:{}}),(e,t)=>(a(),n("div",p,r))}};export{E as default};

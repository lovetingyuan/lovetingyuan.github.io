import{o as a,f as n,O as e}from"./vendor-y_6yhxmk.js";const l={class:"markdown-body"},o=e(`<h3>跨页面通信</h3><ol><li>localStorage （同源）</li></ol><p>原理：利用 localStorage 的事件监听机制，当一个页面修改 localStorage 的内容时，其他页面会收到事件通知，从而实现通信。</p><p>页面 A：<code>localStorage.setItem(&#39;message&#39;, &#39;Hello from page A!&#39;)</code> 页面 B：<code>window.addEventListener(&#39;storage&#39;, (event) =&gt; { console.log(event.newValue) });</code></p><ol start="2"><li>BroadcastChannel （同源）</li></ol><p>原理：使用 <a href="https://developer.mozilla.org/zh-CN/docs/Web/API/BroadcastChannel" target="_blank" rel="noopener"><code>BroadcastChannel</code></a> 对象创建广播通道，所有监听该通道的页面都可以接收消息。</p><p>页面A</p><pre class="shiki shiki-themes github-light github-dark" style="background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8;" tabindex="0"><code class="language-js"><span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">const</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> channel</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#D73A49;--shiki-dark:#F97583;"> new</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> BroadcastChannel</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="color:#032F62;--shiki-dark:#9ECBFF;">&#39;myChannel&#39;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">channel.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">postMessage</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="color:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello from page A!&#39;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><p>页面B</p><pre class="shiki shiki-themes github-light github-dark" style="background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8;" tabindex="0"><code class="language-js"><span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">const</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> channel</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#D73A49;--shiki-dark:#F97583;"> new</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> BroadcastChannel</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="color:#032F62;--shiki-dark:#9ECBFF;">&#39;myChannel&#39;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">channel.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="color:#032F62;--shiki-dark:#9ECBFF;">&#39;message&#39;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="color:#E36209;--shiki-dark:#FFAB70;">event</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  console.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(event.data)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><ol start="3"><li>window.postMessage</li></ol><p>页面A</p><pre class="shiki shiki-themes github-light github-dark" style="background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8;" tabindex="0"><code class="language-js"><span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">const</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> iframe</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> document.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">getElementById</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="color:#032F62;--shiki-dark:#9ECBFF;">&#39;myIframe&#39;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">iframe.contentWindow.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">postMessage</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="color:#032F62;--shiki-dark:#9ECBFF;">&#39;Hello from page A!&#39;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#032F62;--shiki-dark:#9ECBFF;">&#39;http://example.com&#39;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">)</span></span></code></pre><p>页面B</p><pre class="shiki shiki-themes github-light github-dark" style="background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8;" tabindex="0"><code class="language-js"><span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">window.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">addEventListener</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="color:#032F62;--shiki-dark:#9ECBFF;">&#39;message&#39;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, (</span><span style="color:#E36209;--shiki-dark:#FFAB70;">event</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  if</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (event.origin </span><span style="color:#D73A49;--shiki-dark:#F97583;">===</span><span style="color:#032F62;--shiki-dark:#9ECBFF;"> &#39;http://example.com&#39;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">    console.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(event.data)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">})</span></span></code></pre><ol start="4"><li>Shared worker</li><li>Service worker</li><li>WebSocket or server-side api</li></ol>`,16),i=[o],E={__name:"浏览器跨页面通信",setup(r,{expose:s}){return s({frontmatter:{}}),(k,t)=>(a(),n("div",l,i))}};export{E as default};

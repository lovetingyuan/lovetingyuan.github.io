import { o as openBlock, c as createElementBlock, p as createStaticVNode } from "./index-30d4195a.js";
const _hoisted_1 = { class: "markdown-body" };
const _hoisted_2 = /* @__PURE__ */ createStaticVNode('<h2>typescript</h2><ol><li><p>实现高级类型 <code>PromiseType&lt;T&gt;</code></p><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code class="language-ts"><span class="line"><span style="color:#9CDCFE;">PromiseType</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#9CDCFE;">string</span><span style="color:#D4D4D4;">&gt;&gt; </span><span style="color:#6A9955;">// string</span></span>\n<span class="line"><span style="color:#9CDCFE;">PromiseType</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">&lt;</span><span style="color:#9CDCFE;">number</span><span style="color:#D4D4D4;">&gt;&gt;&gt; </span><span style="color:#6A9955;">// number</span></span>\n<span class="line"></span></code></pre></li></ol><h2>html &amp; css</h2><ol><li><p>使用 css 和 html 实现一个简单的 tab 页切换效果，要求不能使用 js</p><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code class="language-html"><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">div</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">class</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;tabs&quot;</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">&lt;!-- 在此书写tab标签 --&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">section</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">content 1</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">section</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">section</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">content 2</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">section</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">section</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">content 3</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">section</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">style</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#6A9955;">/* 在此书写样式 */</span></span>\n<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">style</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"></span></code></pre></li><li><p>隐藏页面上的一个元素（不可见），有哪些方法？ hidden display visibility opacity content-visibility 绝对定位 size=0 clip-path:polygon(0 0)</p></li><li><p>实现一个小矩形逐渐变成大矩形的效果，有多少实现方式？</p></li><li><p>了解 gpu 硬件加速吗 背后的原理和流程是什么</p></li></ol><h2>javascript</h2><ol><li><p>实现下面的语句</p><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code class="language-js"><span class="line"><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">foo</span><span style="color:#D4D4D4;">() {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">val</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"><span style="color:#6A9955;">// 用不用的方式来调用foo，使控制台打印出字符串 foo</span></span>\n<span class="line"><span style="color:#6A9955;">// 例如：foo.call({ val: &#39;foo&#39; })</span></span>\n<span class="line"></span></code></pre></li><li><p>写出对应的输出</p><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code class="language-js"><span class="line"><span style="color:#D4D4D4;">;(</span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">p</span><span style="color:#D4D4D4;"> = </span><span style="color:#569CD6;">new</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">r</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">().</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#DCDCAA;">r</span><span style="color:#D4D4D4;">()</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">    })</span></span>\n<span class="line"><span style="color:#D4D4D4;">  })</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">4</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">p</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">5</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">  }).</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">6</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">  })</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">p</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">7</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">  })</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">setTimeout</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">8</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">  }, </span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#DCDCAA;">setTimeout</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">9</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">  }, </span><span style="color:#B5CEA8;">8</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">})()</span></span>\n<span class="line"></span></code></pre></li><li><p>实现<code>Promise.all</code>和<code>Promise.finally</code></p><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code class="language-js"><span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">obj</span><span style="color:#D4D4D4;"> = { </span><span style="color:#9CDCFE;">a:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;one&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">b:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;two&#39;</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">a:</span><span style="color:#D4D4D4;"> </span><span style="color:#CE9178;">&#39;three&#39;</span><span style="color:#D4D4D4;"> }</span></span>\n<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">obj</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#6A9955;">// --------------</span></span>\n<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">getData</span><span style="color:#D4D4D4;">() {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;I made it!&#39;</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">getData2</span><span style="color:#D4D4D4;">() {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;I made it!&#39;</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">getData</span><span style="color:#D4D4D4;">()) </span><span style="color:#6A9955;">// Promise {&lt;pending&gt;}</span></span>\n<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">getData2</span><span style="color:#D4D4D4;">()) </span><span style="color:#6A9955;">// Promise {&lt;fulfilled&gt;: &#39;I made it!&#39;}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">function*</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">range</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">start</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">end</span><span style="color:#D4D4D4;">) {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">let</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> = </span><span style="color:#9CDCFE;">start</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;"> &lt;= </span><span style="color:#9CDCFE;">end</span><span style="color:#D4D4D4;">; </span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">++) {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#C586C0;">yield</span><span style="color:#D4D4D4;"> </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">i</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">  }</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#D4D4D4;">;(</span><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> () </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">gen</span><span style="color:#D4D4D4;"> = </span><span style="color:#DCDCAA;">range</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#B5CEA8;">3</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">for</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> (</span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">item</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">of</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">gen</span><span style="color:#D4D4D4;">) {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">item</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">  }</span></span>\n<span class="line"><span style="color:#D4D4D4;">})()</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">name</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;Lydia Hallie&#39;</span></span>\n<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">age</span><span style="color:#D4D4D4;"> = </span><span style="color:#B5CEA8;">21</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Number</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">isNaN</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">))</span></span>\n<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">Number</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">isNaN</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">age</span><span style="color:#D4D4D4;">))</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">isNaN</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">name</span><span style="color:#D4D4D4;">))</span></span>\n<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#DCDCAA;">isNaN</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">age</span><span style="color:#D4D4D4;">))</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">myPromise</span><span style="color:#D4D4D4;"> = </span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#4EC9B0;">Promise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">resolve</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;Promise!&#39;</span><span style="color:#D4D4D4;">))</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">funcOne</span><span style="color:#D4D4D4;">() {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">myPromise</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;">).</span><span style="color:#DCDCAA;">then</span><span style="color:#D4D4D4;">((</span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;">) </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">11</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;">))</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"></span>\n<span class="line"><span style="color:#569CD6;">async</span><span style="color:#D4D4D4;"> </span><span style="color:#569CD6;">function</span><span style="color:#D4D4D4;"> </span><span style="color:#DCDCAA;">funcTwo</span><span style="color:#D4D4D4;">() {</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#569CD6;">const</span><span style="color:#D4D4D4;"> </span><span style="color:#4FC1FF;">res</span><span style="color:#D4D4D4;"> = </span><span style="color:#C586C0;">await</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">myPromise</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">22</span><span style="color:#D4D4D4;">, </span><span style="color:#9CDCFE;">res</span><span style="color:#D4D4D4;">) </span><span style="color:#6A9955;">//  console.log(22, await res)</span></span>\n<span class="line"><span style="color:#D4D4D4;">}</span></span>\n<span class="line"><span style="color:#DCDCAA;">funcOne</span><span style="color:#D4D4D4;">()</span></span>\n<span class="line"><span style="color:#DCDCAA;">funcTwo</span><span style="color:#D4D4D4;">()</span></span>\n<span class="line"></span></code></pre><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code class="language-html"><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">div</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">onclick</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;</span><span style="color:#9CDCFE;">console</span><span style="color:#CE9178;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#CE9178;">(&#39;div&#39;)&quot;</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">p</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">onclick</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;</span><span style="color:#9CDCFE;">console</span><span style="color:#CE9178;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#CE9178;">(&#39;p&#39;)&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">Click here!</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">div</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"></span></code></pre></li><li><p>实现以下功能</p><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code class="language-js"><span class="line"><span style="color:#CE9178;">&#39;#foo&#39;</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">html</span><span style="color:#D4D4D4;"> = </span><span style="color:#CE9178;">&#39;&lt;b&gt;foo&lt;/b&gt;&#39;</span></span>\n<span class="line"><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">assert</span><span style="color:#D4D4D4;">(</span><span style="color:#9CDCFE;">document</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">getElementById</span><span style="color:#D4D4D4;">(</span><span style="color:#CE9178;">&#39;foo&#39;</span><span style="color:#D4D4D4;">).</span><span style="color:#9CDCFE;">innerHTML</span><span style="color:#D4D4D4;"> === </span><span style="color:#CE9178;">&#39;#foo&#39;</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">html</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"></span></code></pre></li></ol><h2>http</h2><ol><li><p>当前网站 A 向第三方网站 C（可信但是不同域名）请求一个接口并且希望带上二者的 cookie，请问需要满足什么条件或者做什么设置？</p><p>withCredential: true and same-site cookie</p></li></ol><h2>vue</h2><ol><li><p>请说出 去掉 one: (2 1 0 \\n 1 1 0)<br> 或去掉 two (2 1 0 \\n 1 1 1)<br> 或者保留二者 (2 2 0 \\n 1 2 2)<br> 三种情况下点击 add 的输出</p><pre class="shiki dark-plus" style="background-color:#1E1E1E;" tabindex="0"><code class="language-html"><span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">span</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">ref</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;count&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">{{count}}</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">span</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">button</span><span style="color:#D4D4D4;"> </span><span style="color:#9CDCFE;">@click</span><span style="color:#D4D4D4;">=</span><span style="color:#CE9178;">&quot;handleAdd&quot;</span><span style="color:#808080;">&gt;</span><span style="color:#D4D4D4;">add</span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">button</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">p</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">template</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#808080;">&lt;</span><span style="color:#569CD6;">script</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"><span style="color:#D4D4D4;">  </span><span style="color:#C586C0;">export</span><span style="color:#D4D4D4;"> </span><span style="color:#C586C0;">default</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#DCDCAA;">data</span><span style="color:#D4D4D4;">() {</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#C586C0;">return</span><span style="color:#D4D4D4;"> { </span><span style="color:#9CDCFE;">count:</span><span style="color:#D4D4D4;"> </span><span style="color:#B5CEA8;">0</span><span style="color:#D4D4D4;"> }</span></span>\n<span class="line"><span style="color:#D4D4D4;">    },</span></span>\n<span class="line"><span style="color:#D4D4D4;">    </span><span style="color:#9CDCFE;">methods:</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">      </span><span style="color:#DCDCAA;">handleAdd</span><span style="color:#D4D4D4;">() {</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C8C8C8;">one</span><span style="color:#D4D4D4;">: </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">count</span><span style="color:#D4D4D4;">++</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">$nextTick</span><span style="color:#D4D4D4;">(() </span><span style="color:#569CD6;">=&gt;</span><span style="color:#D4D4D4;"> {</span></span>\n<span class="line"><span style="color:#D4D4D4;">          </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">1</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">count</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$refs</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">count</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">textContent</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">        })</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#C8C8C8;">two</span><span style="color:#D4D4D4;">: </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">count</span><span style="color:#D4D4D4;">++</span></span>\n<span class="line"><span style="color:#D4D4D4;">        </span><span style="color:#9CDCFE;">console</span><span style="color:#D4D4D4;">.</span><span style="color:#DCDCAA;">log</span><span style="color:#D4D4D4;">(</span><span style="color:#B5CEA8;">2</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">count</span><span style="color:#D4D4D4;">, </span><span style="color:#569CD6;">this</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">$refs</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">count</span><span style="color:#D4D4D4;">.</span><span style="color:#9CDCFE;">textContent</span><span style="color:#D4D4D4;">)</span></span>\n<span class="line"><span style="color:#D4D4D4;">      },</span></span>\n<span class="line"><span style="color:#D4D4D4;">    },</span></span>\n<span class="line"><span style="color:#D4D4D4;">  }</span></span>\n<span class="line"><span style="color:#808080;">&lt;/</span><span style="color:#569CD6;">script</span><span style="color:#808080;">&gt;</span></span>\n<span class="line"></span></code></pre></li></ol><h2>git</h2><ol><li>如何合并多个 commit 为一个 commit</li></ol><h2>算法</h2><ol><li><p>判断一个二叉树是否是另一个二叉树的<strong>子结构</strong> <a href="https://leetcode-cn.com/problems/shu-de-zi-jie-gou-lcof/" target="_blank" rel="noopener">leetcode</a></p></li><li><p>使用递归和迭代两种方式反转一个链表 <a href="https://leetcode-cn.com/problems/reverse-linked-list/" target="_blank" rel="noopener">leetcode</a></p></li><li><p>有一个数组，从其中找到两个数的最大差值(要求这两个数递增)，返回对应的差值</p></li><li><p>使用两种方法实现 N 叉树的层次遍历 <a href="https://leetcode.cn/problems/n-ary-tree-level-order-traversal/" target="_blank" rel="noopener">leetcode</a></p></li></ol>', 14);
const _hoisted_16 = [
  _hoisted_2
];
const _sfc_main = {
  __name: "test",
  setup(__props, { expose: __expose }) {
    const frontmatter = {};
    __expose({ frontmatter });
    return (_ctx, _cache) => {
      return openBlock(), createElementBlock("div", _hoisted_1, _hoisted_16);
    };
  }
};
export {
  _sfc_main as default
};

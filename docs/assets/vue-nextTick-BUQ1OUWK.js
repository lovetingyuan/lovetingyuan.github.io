import{o as a,f as n,O as l}from"./vendor-y_6yhxmk.js";const i={class:"markdown-body"},p=l(`<h3>vue nextTick过程</h3><p>nextTick是vue调度器的核心之一，下面展示了相关的伪代码：</p><pre class="shiki shiki-themes github-light github-dark" style="background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8;" tabindex="0"><code class="language-js"><span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">let</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> isFlushing </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">let</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> isFlushPending </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">const</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> queue</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> []</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">let</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> flushIndex </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">const</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> resolvedPromise</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> Promise</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">resolve</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">let</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> currentFlushPromise </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> null</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">export</span><span style="color:#D73A49;--shiki-dark:#F97583;"> function</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> nextTick</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="color:#E36209;--shiki-dark:#FFAB70;">fn</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  const</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> p</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> currentFlushPromise </span><span style="color:#D73A49;--shiki-dark:#F97583;">||</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> resolvedPromise</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  return</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> fn </span><span style="color:#D73A49;--shiki-dark:#F97583;">?</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> p.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(fn) </span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> p</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">export</span><span style="color:#D73A49;--shiki-dark:#F97583;"> function</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> queueJob</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="color:#E36209;--shiki-dark:#FFAB70;">job</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  queue.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">push</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(job) </span><span style="color:#6A737D;--shiki-dark:#6A737D;">// 会根据id去重</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  if</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="color:#D73A49;--shiki-dark:#F97583;">!</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">isFlushing </span><span style="color:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="color:#D73A49;--shiki-dark:#F97583;"> !</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">isFlushPending) {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">    isFlushPending </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">    currentFlushPromise </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> resolvedPromise.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">then</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">      while</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (queue.</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">        isFlushPending </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">        isFlushing </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> true</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">        queue.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">sort</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(comparator)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">        queue.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">forEach</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="color:#E36209;--shiki-dark:#FFAB70;">job</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> job</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">())</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">        queue.</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">length</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 0</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">        isFlushing </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> false</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">        currentFlushPromise </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> null</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">    })</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre><p>从上面的伪代码可以看出，<code>nextTick</code>会保证传入的回调在所有的vue内部相关渲染任务或watch回调等完成之后作为微任务调用。这也是为什么可以在其回调中访问到更新后的dom</p><hr><p>一个小测验</p><pre class="shiki shiki-themes github-light github-dark" style="background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8;" tabindex="0"><code class="language-html"><span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#22863A;--shiki-dark:#85E89D;">template</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="color:#22863A;--shiki-dark:#85E89D;">span</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> ref</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="color:#032F62;--shiki-dark:#9ECBFF;">&quot;counter&quot;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt;{{ count }}&lt;/</span><span style="color:#22863A;--shiki-dark:#85E89D;">span</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  &lt;</span><span style="color:#22863A;--shiki-dark:#85E89D;">button</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> @click</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">=</span><span style="color:#032F62;--shiki-dark:#9ECBFF;">&quot;handleAdd&quot;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt;add&lt;/</span><span style="color:#22863A;--shiki-dark:#85E89D;">button</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="color:#22863A;--shiki-dark:#85E89D;">template</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#22863A;--shiki-dark:#85E89D;">script</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  export</span><span style="color:#D73A49;--shiki-dark:#F97583;"> default</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#B392F0;">    data</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">      return</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> { count: </span><span style="color:#005CC5;--shiki-dark:#79B8FF;">0</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">    },</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">    methods: {</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#B392F0;">      log</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="color:#E36209;--shiki-dark:#FFAB70;">i</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">        console.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(i, </span><span style="color:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">.count, </span><span style="color:#005CC5;--shiki-dark:#79B8FF;">this</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">.$refs.counter.textContent)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">      },</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#B392F0;">      handleAdd</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">() {</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">.count</span><span style="color:#D73A49;--shiki-dark:#F97583;">++</span><span style="color:#6A737D;--shiki-dark:#6A737D;"> // 保留或去掉这行输出有何不同？</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">$nextTick</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">.count</span><span style="color:#D73A49;--shiki-dark:#F97583;">++</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">)</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">$nextTick</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">.count</span><span style="color:#D73A49;--shiki-dark:#F97583;">++</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#79B8FF;">        this</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">$nextTick</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(() </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> this</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">log</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(</span><span style="color:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">))</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">      }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;/</span><span style="color:#22863A;--shiki-dark:#85E89D;">script</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt;</span></span></code></pre><details><summary>output</summary><div style="padding-top:10px;"><pre class="shiki shiki-themes github-light github-dark" style="background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8;" tabindex="0"><code class="language-log"><span class="line"><span style="color:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="color:#032F62;--shiki-dark:#9ECBFF;"> &#39;0&#39;</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="color:#032F62;--shiki-dark:#9ECBFF;"> &#39;3&#39;</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="color:#032F62;--shiki-dark:#9ECBFF;"> &#39;3&#39;</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 3</span><span style="color:#032F62;--shiki-dark:#9ECBFF;"> &#39;3&#39;</span></span></code></pre><p>如果把第一个 <code>this.count++</code> 去掉，那么输出变成：</p><pre class="shiki shiki-themes github-light github-dark" style="background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8;" tabindex="0"><code class="language-log"><span class="line"><span style="color:#005CC5;--shiki-dark:#79B8FF;">2</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="color:#032F62;--shiki-dark:#9ECBFF;"> &#39;0&#39;</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#79B8FF;">1</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="color:#032F62;--shiki-dark:#9ECBFF;"> &#39;0&#39;</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#79B8FF;">3</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="color:#032F62;--shiki-dark:#9ECBFF;"> &#39;2&#39;</span></span>
<span class="line"><span style="color:#005CC5;--shiki-dark:#79B8FF;">4</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="color:#032F62;--shiki-dark:#9ECBFF;"> &#39;2&#39;</span></span></code></pre><p>此时，第一个nextTick运行时，前面并没有job queue，所以它被立即推入微任务，随后当前组件更新才作为一个新的job被推入queue，随后清空queue的任务被推入微任务，所以第一个nextTick运行时dom并没有变更。</p></div></details>`,8),o=[p],c={__name:"vue-nextTick",setup(r,{expose:s}){return s({frontmatter:{}}),(e,E)=>(a(),n("div",i,o))}};export{c as default};

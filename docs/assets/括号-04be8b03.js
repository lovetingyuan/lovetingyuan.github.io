import{o,c as t,s as d}from"./index-37e992f3.js";const c={class:"markdown-body"},i=d('<details><summary><a href="https://leetcode-cn.com/problems/longest-valid-parentheses/" target="_blank" rel="noopener" style="margin-left:8px;">最长有效括号</a></summary><div style="padding-top:10px;"><ul><li>动态规划</li><li>dp[i]表示以 i 结尾的最长有效括号的长度，需要考虑以<code>()</code>和<code>))</code>结尾的两种情况</li><li><code>()</code>就很好判断 <code>dp[i] = dp[i - 2] + 2</code></li><li><code>))</code>稍微复杂一些，如果 <code>s[i−dp[i−1]−1] = &#39;(&#39;</code>, 那么 <code>dp[i] = dp[i−1] + dp[i−dp[i−1]−2] + 2</code></li></ul></div></details>',1),s=[i],m={__name:"括号",setup(a,{expose:e}){return e({frontmatter:{}}),(r,n)=>(o(),t("div",c,s))}};export{m as default};

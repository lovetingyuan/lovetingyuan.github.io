import{o,f as n,N as s}from"./vendor-F3_pRict.js";const c={class:"markdown-body"},l={__name:"include-references",setup(r,{expose:t}){return t({frontmatter:{}}),(p,e)=>(o(),n("div",c,e[0]||(e[0]=[s('<h3>include and references</h3><blockquote><p><a href="https://kettanaito.com/blog/one-thing-nobody-explained-to-you-about-typescript" target="_blank" rel="noopener">https://kettanaito.com/blog/one-thing-nobody-explained-to-you-about-typescript</a></p></blockquote><p>tsconfig.json 中的 <code>include</code> 和 <code>references</code></p><ul><li>include 表示当前的tsconfig.json会对哪些文件生效</li><li>references 表示当前的tsconfig.json需要额外关注的其余配置</li></ul><p>举个例子：</p><p>假设项目中存在tests目录存放单元测试，tsconfig.test.json 中 include 配置为 ‘./tests’， src目录则存放源码，tsconfig.src.json 中 include 配置为 ‘./src’, 这没问题，但是通常测试文件需要import源码的模块，此时就需要在 tsconfig.test.json 的 references中添加tsconfig.src.json，这样可以在typescript检查测试代码的时候告诉typescript也去检查src中相关的模块</p>',6)])))}};export{l as default};

import{o as a,c as n,J as l}from"./vendor-CYMqmtIB.js";const p={class:"markdown-body"},i=l(`<h3>React 受控与非受控组件</h3><pre class="shiki shiki-themes github-light github-dark" style="background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8;" tabindex="0"><code class="language-typescript"><span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">import</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> { SetStateAction, useRef } </span><span style="color:#D73A49;--shiki-dark:#F97583;">from</span><span style="color:#032F62;--shiki-dark:#9ECBFF;"> &#39;react&#39;</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">import</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> { useMemoizedFn, useUpdate } </span><span style="color:#D73A49;--shiki-dark:#F97583;">from</span><span style="color:#032F62;--shiki-dark:#9ECBFF;"> &#39;ahooks&#39;</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">type</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Options</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt; </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#FFAB70;">  value</span><span style="color:#D73A49;--shiki-dark:#F97583;">?:</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span></span>
<span class="line"><span style="color:#E36209;--shiki-dark:#FFAB70;">  defaultValue</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#B392F0;">  onChange</span><span style="color:#D73A49;--shiki-dark:#F97583;">?:</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="color:#E36209;--shiki-dark:#FFAB70;">v</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> void</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">}</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">export</span><span style="color:#D73A49;--shiki-dark:#F97583;"> function</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> usePropsValue</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt;(</span><span style="color:#E36209;--shiki-dark:#FFAB70;">options</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> Options</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt;) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  const</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> { </span><span style="color:#005CC5;--shiki-dark:#79B8FF;">value</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#005CC5;--shiki-dark:#79B8FF;">defaultValue</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#005CC5;--shiki-dark:#79B8FF;">onChange</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> } </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> options</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  const</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> update</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> useUpdate</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  const</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> stateRef</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> useRef</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt;(value </span><span style="color:#D73A49;--shiki-dark:#F97583;">!==</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> undefined</span><span style="color:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> value </span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> defaultValue)</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  if</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (value </span><span style="color:#D73A49;--shiki-dark:#F97583;">!==</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> undefined</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">    stateRef.current </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> value</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  const</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> setState</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> useMemoizedFn</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">((</span><span style="color:#E36209;--shiki-dark:#FFAB70;">v</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> SetStateAction</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&lt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">&gt;, </span><span style="color:#E36209;--shiki-dark:#FFAB70;">forceTrigger</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> boolean</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> false</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">    // \`forceTrigger\` means trigger \`onChange\` even if \`v\` is the same as \`stateRef.current\`</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">    const</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> nextValue</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#D73A49;--shiki-dark:#F97583;"> typeof</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> v </span><span style="color:#D73A49;--shiki-dark:#F97583;">===</span><span style="color:#032F62;--shiki-dark:#9ECBFF;"> &#39;function&#39;</span><span style="color:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (v </span><span style="color:#D73A49;--shiki-dark:#F97583;">as</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="color:#E36209;--shiki-dark:#FFAB70;">prevState</span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> T</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">)(stateRef.current) </span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> v</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">    if</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="color:#D73A49;--shiki-dark:#F97583;">!</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">forceTrigger </span><span style="color:#D73A49;--shiki-dark:#F97583;">&amp;&amp;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> nextValue </span><span style="color:#D73A49;--shiki-dark:#F97583;">===</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> stateRef.current) </span><span style="color:#D73A49;--shiki-dark:#F97583;">return</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">    stateRef.current </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> nextValue</span></span>
<span class="line"><span style="color:#6F42C1;--shiki-dark:#B392F0;">    update</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">()</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">    return</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> onChange</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">?.(nextValue)</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  })</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  return</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> [stateRef.current, setState] </span><span style="color:#D73A49;--shiki-dark:#F97583;">as</span><span style="color:#D73A49;--shiki-dark:#F97583;"> const</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre>`,2),o=[i],E={__name:"受控与非受控组件",setup(r,{expose:s}){return s({frontmatter:{}}),(k,t)=>(a(),n("div",p,o))}};export{E as default};

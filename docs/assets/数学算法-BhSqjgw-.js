import{o as a,f as n,O as l}from"./vendor-y_6yhxmk.js";const i={class:"markdown-body"},p=l(`<h3>辗转相除</h3><pre class="shiki shiki-themes github-light github-dark" style="background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8;" tabindex="0"><code class="language-js"><span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 最大公约数</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">const</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> gcd</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="color:#E36209;--shiki-dark:#FFAB70;">a</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#E36209;--shiki-dark:#FFAB70;">b</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (b </span><span style="color:#D73A49;--shiki-dark:#F97583;">===</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="color:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> a </span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> gcd</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(b, a </span><span style="color:#D73A49;--shiki-dark:#F97583;">%</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> b))</span></span>
<span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// 最小公倍数</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">const</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> lcm</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="color:#E36209;--shiki-dark:#FFAB70;">a</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#E36209;--shiki-dark:#FFAB70;">b</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (a </span><span style="color:#D73A49;--shiki-dark:#F97583;">*</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> b) </span><span style="color:#D73A49;--shiki-dark:#F97583;">/</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> gcd</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(a, b)</span></span></code></pre><h3>快速幂</h3><pre class="shiki shiki-themes github-light github-dark" style="background-color:#fff;--shiki-dark-bg:#24292e;color:#24292e;--shiki-dark:#e1e4e8;" tabindex="0"><code class="language-js"><span class="line"><span style="color:#6A737D;--shiki-dark:#6A737D;">// x ** n</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">const</span><span style="color:#6F42C1;--shiki-dark:#B392F0;"> fastPow</span><span style="color:#D73A49;--shiki-dark:#F97583;"> =</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (</span><span style="color:#E36209;--shiki-dark:#FFAB70;">x</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">, </span><span style="color:#E36209;--shiki-dark:#FFAB70;">n</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) </span><span style="color:#D73A49;--shiki-dark:#F97583;">=&gt;</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  let</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> zhi </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> Math.</span><span style="color:#6F42C1;--shiki-dark:#B392F0;">abs</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">(n) </span><span style="color:#6A737D;--shiki-dark:#6A737D;">// 指数</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  let</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> result </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  while</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (zhi </span><span style="color:#D73A49;--shiki-dark:#F97583;">&gt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="color:#24292E;--shiki-dark:#E1E4E8;">) {</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">    let</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> mi </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 1</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">    let</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> num </span><span style="color:#D73A49;--shiki-dark:#F97583;">=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> x</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">    while</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> (mi </span><span style="color:#D73A49;--shiki-dark:#F97583;">*</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 2</span><span style="color:#D73A49;--shiki-dark:#F97583;"> &lt;=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> zhi) {</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">      mi </span><span style="color:#D73A49;--shiki-dark:#F97583;">*=</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 2</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">      num </span><span style="color:#D73A49;--shiki-dark:#F97583;">*=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> num</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">    }</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">    result </span><span style="color:#D73A49;--shiki-dark:#F97583;">*=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> num</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">    zhi </span><span style="color:#D73A49;--shiki-dark:#F97583;">-=</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> mi</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">  }</span></span>
<span class="line"><span style="color:#D73A49;--shiki-dark:#F97583;">  return</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> n </span><span style="color:#D73A49;--shiki-dark:#F97583;">&lt;</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 0</span><span style="color:#D73A49;--shiki-dark:#F97583;"> ?</span><span style="color:#005CC5;--shiki-dark:#79B8FF;"> 1</span><span style="color:#D73A49;--shiki-dark:#F97583;"> /</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> result </span><span style="color:#D73A49;--shiki-dark:#F97583;">:</span><span style="color:#24292E;--shiki-dark:#E1E4E8;"> result</span></span>
<span class="line"><span style="color:#24292E;--shiki-dark:#E1E4E8;">}</span></span></code></pre>`,4),o=[p],c={__name:"数学算法",setup(r,{expose:s}){return s({frontmatter:{}}),(e,E)=>(a(),n("div",i,o))}};export{c as default};
